{"version":3,"file":"static/js/687.14f9c552.chunk.js","mappings":"wJAWA,EAJ8B,SAAH,GAAkC,IAA5BA,EAAQ,EAARA,SAC/B,OAAO,eAAIC,UAAW,QAAQ,SAAED,GAClC,C,+GCoBA,EAnBe,SAAH,GAMQ,IALlBA,EAAQ,EAARA,SACAC,EAAS,EAATA,UACAC,EAAO,EAAPA,QAAQ,EAAD,EACPC,KAAAA,OAAI,MAAG,SAAQ,EACfC,EAAQ,EAARA,SAEA,OACE,mBACEA,SAAUA,EACVD,KAAMA,EACND,QAASA,EACTD,UAAS,cAASA,GAAY,SAE7BD,GAGP,E,4BCsEA,EAlFiB,WACf,IAAIK,GAA0DC,EAAAA,EAAAA,QAAO,MACrE,GAA8BC,EAAAA,EAAAA,IAAQ,YAAW,eAA1CC,EAAK,KAAEC,EAAY,KAY1B,OAVAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,GACTF,EAAMG,QAAWH,EAAMI,YAExBJ,EAAMG,QAAiB,OAAPN,QAAO,IAAPA,GAAgB,QAAT,EAAPA,EAASQ,eAAO,OAAhB,EAAkBC,OACpCC,YAAW,WAAO,IAAD,EACA,QAAf,EAAAV,EAAQQ,eAAO,OAAf,EAAiBC,OACnB,GAAG,IAEP,GAAG,CAACN,EAAMI,UAAWJ,EAAMG,UAGzB,iBAAKV,UAAW,WAAW,WACzB,SAACe,EAAA,EAAK,wBACN,kBAAMC,IAAKZ,EAASa,SAAUT,EAAcR,UAAU,eAAc,WAClE,iBAAKA,UAAU,iBAAgB,WAC7B,kBAAMA,UAAU,oBAAmB,WACjC,kBACEkB,GAAG,WACHhB,KAAK,OACLiB,KAAK,WACLnB,UAAU,eAEZ,kBAAOoB,QAAQ,WAAU,mBACzB,SAAC,KAAe,CACdC,OAAO,OACPC,MAAM,WACNC,OAAQhB,EAAMgB,aAGlB,kBAAMvB,UAAU,oBAAmB,WACjC,kBACEkB,GAAG,QACHhB,KAAK,QACLiB,KAAK,aACLnB,UAAU,eAEZ,kBAAOoB,QAAQ,QAAO,oBACtB,SAAC,KAAe,CACdC,OAAO,QACPC,MAAM,QACNC,OAAQhB,EAAMgB,gBAIpB,iBAAKvB,UAAU,oBAAmB,WAChC,qBAAUmB,KAAK,UAAUnB,UAAU,eACnC,SAAC,KAAe,CACdqB,OAAO,UACPC,MAAM,UACNC,OAAQhB,EAAMgB,aAGlB,SAAC,EAAM,CACLpB,SAAUI,EAAMiB,WAChBtB,KAAM,SACNF,UAAW,UAAU,SAEpBO,EAAMiB,YAAa,SAAC,KAAU,IAAM,aAGzC,gBAAKxB,UAAU,eAAc,SAC1ByB,EAAAA,GAAAA,KAAc,SAACC,GACd,OACE,cAEE1B,UAAU,cACV2B,KAAMD,EAAIE,IACVC,OAAO,SAAQ,SAEdH,EAAII,QALAJ,EAAIR,GAQf,QAIR,C","sources":["components/Title/index.tsx","components/Button/index.tsx","pages/Contacts/index.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react';\nimport './style.scss';\n\ninterface TitleProps {\n  children?: ReactNode;\n}\n\nconst Title: FC<TitleProps> = ({ children }: TitleProps) => {\n  return <h2 className={'title'}>{children}</h2>;\n};\n\nexport default Title;\n","import React, { ReactNode } from 'react';\nimport './style.scss';\n\ninterface ButtonProps {\n  children: ReactNode;\n  className?: string;\n  onClick?: React.MouseEventHandler;\n  type?: 'button' | 'submit';\n  disabled?: boolean;\n}\nconst Button = ({\n  children,\n  className,\n  onClick,\n  type = 'button',\n  disabled,\n}: ButtonProps) => {\n  return (\n    <button\n      disabled={disabled}\n      type={type}\n      onClick={onClick}\n      className={`btn ${className}`}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, {\n  RefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport './style.scss';\nimport Title from 'components/Title';\nimport Button from 'components/Button';\nimport emailjs from '@emailjs/browser';\nimport { useForm, ValidationError } from '@formspree/react';\nimport { socialObj } from 'helpers/constants';\nimport { LoaderIcon } from '../../assets/icons';\n\nconst Contacts = () => {\n  let formRef: React.MutableRefObject<HTMLFormElement | null> = useRef(null);\n  const [state, handleSubmit] = useForm('xknanapj');\n\n  useEffect(() => {\n    if (!state.result && !state.succeeded) return;\n\n    if (state.result && formRef?.current?.reset) {\n      setTimeout(() => {\n        formRef.current?.reset();\n      }, 1000);\n    }\n  }, [state.succeeded, state.result]);\n\n  return (\n    <div className={'contacts'}>\n      <Title>Contacts</Title>\n      <form ref={formRef} onSubmit={handleSubmit} className=\"contact-form\">\n        <div className=\"inputs-wrapper\">\n          <span className=\"form-item-wrapper\">\n            <input\n              id=\"fromName\"\n              type=\"text\"\n              name=\"fromName\"\n              className=\"form-item\"\n            />\n            <label htmlFor=\"fullName\">Name</label>\n            <ValidationError\n              prefix=\"Name\"\n              field=\"fromName\"\n              errors={state.errors}\n            />\n          </span>\n          <span className=\"form-item-wrapper\">\n            <input\n              id=\"email\"\n              type=\"email\"\n              name=\"from_email\"\n              className=\"form-item\"\n            />\n            <label htmlFor=\"email\">Email</label>\n            <ValidationError\n              prefix=\"Email\"\n              field=\"email\"\n              errors={state.errors}\n            />\n          </span>\n        </div>\n        <div className=\"form-item-wrapper\">\n          <textarea name=\"message\" className=\"form-item\" />\n          <ValidationError\n            prefix=\"Message\"\n            field=\"message\"\n            errors={state.errors}\n          />\n        </div>\n        <Button\n          disabled={state.submitting}\n          type={'submit'}\n          className={'primary'}\n        >\n          {state.submitting ? <LoaderIcon /> : 'Send'}\n        </Button>\n      </form>\n      <div className=\"social-sites\">\n        {socialObj.map((obj) => {\n          return (\n            <a\n              key={obj.id}\n              className=\"social-item\"\n              href={obj.url}\n              target=\"_blank\"\n            >\n              {obj.icon()}\n            </a>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["children","className","onClick","type","disabled","formRef","useRef","useForm","state","handleSubmit","useEffect","result","succeeded","current","reset","setTimeout","Title","ref","onSubmit","id","name","htmlFor","prefix","field","errors","submitting","socialObj","obj","href","url","target","icon"],"sourceRoot":""}