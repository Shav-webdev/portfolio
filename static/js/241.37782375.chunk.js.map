{"version":3,"file":"static/js/241.37782375.chunk.js","mappings":"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","sources":["components/Title/index.tsx","components/WordsBall/index.tsx","components/CustomizableProgressBar/index.tsx","pages/MySkills/index.tsx","hooks/useOnScreen.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react';\nimport './style.scss';\n\ninterface TitleProps {\n  children?: ReactNode;\n}\n\nconst Title: FC<TitleProps> = ({ children }: TitleProps) => {\n  return <h2 className={'title'}>{children}</h2>;\n};\n\nexport default Title;\n","import * as THREE from 'three';\nimport React, {\n  useId,\n  useRef,\n  useState,\n  useMemo,\n  useEffect,\n  ReactNode,\n  useContext,\n} from 'react';\nimport { Canvas, ThreeEvent, useFrame } from '@react-three/fiber';\nimport { Text, TrackballControls } from '@react-three/drei';\nimport { Vector3 } from 'three';\nimport { ThemeContext } from '../../contexts/ThemeContext';\n// import randomWord from 'random-words';\n\ninterface IWordsBall {\n  children: ReactNode;\n  position?: Vector3;\n}\n\nconst WordsBall = ({ children, ...props }: IWordsBall) => {\n  const color = new THREE.Color();\n  const fontProps = {\n    fontSize: 2.5,\n    letterSpacing: -0.05,\n    lineHeight: 1,\n    'material-toneMapped': false,\n  };\n  const ref = useRef();\n  const { theme, setTheme } = useContext(ThemeContext);\n  const [hovered, setHovered] = useState(false);\n  const over = (e: ThreeEvent<PointerEvent>) => (\n    e.stopPropagation(), setHovered(true)\n  );\n  const out = () => setHovered(false);\n\n  // Change the mouse cursor on hover\n  useEffect(() => {\n    if (hovered) document.body.style.cursor = 'pointer';\n    return () => {\n      document.body.style.cursor = 'auto';\n    };\n  }, [hovered]);\n\n  // Tie component to the render-loop\n  useFrame(({ camera }: { camera: any }) => {\n    // Make text face the camera\n    // @ts-ignore\n    ref.current?.quaternion.copy(camera.quaternion);\n    // Animate font color\n    // @ts-ignore\n    ref.current?.material.color.lerp(\n      color.set(hovered ? '#fa2720' : 'white'),\n      0.1,\n    );\n  });\n\n  return (\n    <Text\n      ref={ref}\n      onPointerOver={over}\n      onPointerOut={out}\n      {...props}\n      {...fontProps}\n      children={children}\n    />\n  );\n};\n\nfunction Cloud({ count = 7, radius = 20 }) {\n  // Create a count x count random words with spherical distribution\n  const key = useId();\n  const words = useMemo(() => {\n    const temp = [];\n\n    const skils = [\n      ['MaterialUI', '', '', '', ''],\n      ['Node', 'MongoDB', 'Express', 'JavaScript', 'jQuery'],\n      ['Webpack', 'Docker', 'React', 'Next.js', 'Chart.js'],\n      ['HighCharts.js', 'Git', 'Passport.js', 'OOP', 'LESS'],\n      ['SCSS', 'TypeScript', 'Bootstrap', 'CSS', 'HTML'],\n      ['Redux', 'SASS', 'Figma', 'AntDesign', 'AdobeXD'],\n    ];\n    const spherical = new THREE.Spherical();\n    const phiSpan = Math.PI / (count + 1);\n    const thetaSpan = (Math.PI * 2) / count;\n    for (let i = 0; i < count + 1; i++)\n      for (let j = 0; j < count; j++)\n        temp.push([\n          new THREE.Vector3().setFromSpherical(\n            spherical.set(radius, phiSpan * i, thetaSpan * j),\n          ),\n          skils[i][j],\n        ]);\n    return temp;\n  }, [count, radius]);\n\n  return (\n    <>\n      {words.map(([pos, word], idx) => (\n        <React.Fragment key={`${key}-${idx}`}>\n          <WordsBall position={pos as Vector3} children={word as ReactNode} />\n        </React.Fragment>\n      ))}\n    </>\n  );\n}\n\nexport default function SkillsGlobe() {\n  return (\n    <Canvas\n      style={{ height: 350 }}\n      dpr={[1, 2]}\n      camera={{ position: [0, 0, 65], fov: 90 }}\n    >\n      <fog attach=\"fog\" args={['#202025', 0, 80]} />\n      <Cloud count={5} radius={45} />\n      <TrackballControls\n        addEventListener={undefined}\n        hasEventListener={undefined}\n        removeEventListener={undefined}\n        dispatchEvent={undefined}\n      />\n    </Canvas>\n  );\n}\n","import React, { ReactNode } from 'react';\nimport './style.scss';\nimport ProgressBar from 'react-customizable-progressbar';\n\ntype ProgressBarTypes = {\n  radius: number;\n  progress: number;\n  steps?: number;\n  cut?: number;\n  rotate?: number;\n  strokeWidth?: number;\n  strokeColor?: string;\n  fillColor?: string;\n  strokeLinecap?: 'round' | 'inherit' | 'butt' | 'square';\n  transition?: string;\n  pointerRadius?: number;\n  pointerStrokeWidth?: number;\n  pointerStrokeColor?: string;\n  pointerFillColor?: string;\n  trackStrokeColor?: string;\n  trackStrokeWidth?: number;\n  trackStrokeLinecap?: 'round' | 'inherit' | 'butt' | 'square';\n  trackTransition?: string;\n  counterClockwise?: boolean;\n  inverse?: boolean;\n  initialAnimation?: boolean;\n  initialAnimationDelay?: number;\n  className?: string;\n  children?: ReactNode;\n};\nconst CustomizableProgressBar = ({\n  initialAnimation,\n  progress,\n  radius,\n  rotate,\n  strokeWidth,\n  strokeColor,\n  strokeLinecap,\n  trackStrokeWidth,\n  pointerStrokeColor,\n  trackStrokeLinecap,\n  pointerRadius,\n  transition,\n  trackTransition,\n  trackStrokeColor,\n  children,\n  cut,\n}: ProgressBarTypes) => {\n  return (\n    <ProgressBar\n      initialAnimation={initialAnimation}\n      progress={progress}\n      radius={radius}\n      cut={cut}\n      rotate={rotate}\n      strokeWidth={strokeWidth}\n      strokeColor={strokeColor}\n      strokeLinecap={strokeLinecap}\n      trackStrokeWidth={trackStrokeWidth}\n      trackStrokeColor={trackStrokeColor}\n      trackStrokeLinecap={trackStrokeLinecap}\n      pointerRadius={pointerRadius}\n      transition={transition}\n      trackTransition={trackTransition}\n      pointerStrokeColor={pointerStrokeColor}\n    >\n      {children}\n    </ProgressBar>\n  );\n};\n\nexport default CustomizableProgressBar;\n","import './style.scss';\nimport Title from 'components/Title';\nimport { Content } from 'Layout/Section';\nimport SkillsGlobe from 'components/WordsBall';\nimport { langAsSkills } from '../../helpers/constants';\nimport CustomizableProgressBar from '../../components/CustomizableProgressBar';\nimport { useContext, useRef } from 'react';\nimport useOnScreen from '../../hooks/useOnScreen';\nimport { ThemeContext } from '../../contexts/ThemeContext';\n\nconst MySkills = () => {\n  const ref = useRef<HTMLDivElement>(null);\n  const isVisible = useOnScreen(ref);\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <div>\n      <Title>My Skills</Title>\n      <Content>\n        <div className=\"skills\">\n          <div className=\"skills-text\">\n            <span className={'fz24 tc-desc f-spec-elite'}>\n              Skilled JavaScript developer with almost 4 years of experience\n              with Front-end technologies such as HTML, CSS(SASS, LESS),\n              Bootstrap, MaterialUI, Ant Design, Styled Components, jQuery,\n              JavaScript(TypeScript), React JS, Redux(Thunk, Saga),\n              Node.js(Express.js, Nest.js), MongoDB, Docker .\n            </span>\n          </div>\n          <div className=\"skills-globe\">\n            <SkillsGlobe />\n          </div>\n        </div>\n        <h2 className=\"tc-desc f-spec-elite\">Languages</h2>\n        <div className=\"lang-skills-wrapper\" ref={ref}>\n          {langAsSkills.map((el) => (\n            <div key={el.title}>\n              {isVisible && (\n                <CustomizableProgressBar\n                  initialAnimation={true}\n                  progress={el.percent}\n                  radius={100}\n                  strokeWidth={16}\n                  strokeColor={theme === 'light' ? '#205d06' : '#ccc'}\n                  strokeLinecap=\"round\"\n                  trackStrokeWidth={8}\n                  trackStrokeColor={theme === 'light' ? '#e6e6e6' : '#36394c'}\n                  trackStrokeLinecap=\"square\"\n                  pointerRadius={0}\n                  transition=\"2.5s ease 1.5s\"\n                  trackTransition=\"0s ease\"\n                >\n                  <div className=\"indicator\">\n                    <div className=\"indicator-percent tc-desc f-spec-elite\">\n                      {el.title}\n                    </div>\n                    <div className=\"indicator-title tc-desc f-spec-elite\">\n                      ({el.level})\n                    </div>\n                  </div>\n                </CustomizableProgressBar>\n              )}\n            </div>\n          ))}\n        </div>\n      </Content>\n    </div>\n  );\n};\n\nexport default MySkills;\n","import { RefObject, useEffect, useMemo, useState } from 'react';\n\nexport default function useOnScreen(ref: RefObject<HTMLElement>) {\n  const [isIntersecting, setIntersecting] = useState(false);\n\n  const observer = useMemo(\n    () =>\n      new IntersectionObserver(([entry]) =>\n        setIntersecting(entry.isIntersecting),\n      ),\n    [ref],\n  );\n\n  useEffect(() => {\n    observer.observe(ref.current!);\n    return () => observer.disconnect();\n  }, []);\n\n  return isIntersecting;\n}\n"],"names":["children","className","WordsBall","props","color","THREE","ref","useRef","theme","setTheme","useContext","ThemeContext","hovered","setHovered","useState","useEffect","document","body","style","cursor","useFrame","camera","current","quaternion","copy","material","lerp","set","Text","onPointerOver","e","stopPropagation","onPointerOut","fontSize","letterSpacing","lineHeight","Cloud","count","radius","key","useId","words","useMemo","temp","skils","spherical","phiSpan","Math","PI","thetaSpan","i","j","push","setFromSpherical","map","idx","pos","word","position","SkillsGlobe","height","dpr","fov","attach","args","TrackballControls","addEventListener","undefined","hasEventListener","removeEventListener","dispatchEvent","initialAnimation","progress","rotate","strokeWidth","strokeColor","strokeLinecap","trackStrokeWidth","pointerStrokeColor","trackStrokeLinecap","pointerRadius","transition","trackTransition","trackStrokeColor","cut","isVisible","isIntersecting","setIntersecting","observer","IntersectionObserver","entry","observe","disconnect","useOnScreen","Title","langAsSkills","el","percent","title","level"],"sourceRoot":""}