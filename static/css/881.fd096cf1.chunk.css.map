{"version":3,"file":"static/css/881.fd096cf1.chunk.css","mappings":"AACA,cAGE,mBAFA,aACA,sBAEA,uBACA,iBACA,6BAEE,aACA,cAFA,WAEA,CACA,yCAGE,kBADA,YADA,UAEA,CAGJ,8BAEE,cAIA,iDALA,cAEA,gBAEA,kBADA,UAEA,CCeA,2CDbE","sources":["pages/Home/style.scss","assets/styles/theme-variables.scss"],"sourcesContent":["@import '../../assets/styles/theme-variables';\n.home-wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 100px;\n  .image-wrapper {\n    width: 150px;\n    height: 150px;\n    margin: 20px 0;\n    .user-image {\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n    }\n  }\n  .text-animation {\n    font-size: 3em;\n    color: #205d06;\n    max-width: 700px;\n    width: 100%;\n    text-align: center;\n    font-family: 'special_eliteregular', serif !important;\n    @include themify($themes) {\n      color: themed('welcomeText');\n    }\n  }\n}\n\n\n","$themes: (\n  light: (\n    bodyBackgroundColor: #f8f8fa,\n    headerFooterBackground: #fff,\n    textColor: #000,\n    toggleBackground: #dfe4ea,\n    navTextColor: #203f1a,\n    activeNavTextColor: #205d06,\n    titleTextColor: #205d06,\n    descriptionTxtColor: #205d06,\n    welcomeText: #205d06,\n    socialIcon: #205d06,\n    btnShadow: rgba(0, 0, 0, 0.2),\n    btnColor: #41403e,\n    btnBackgroundColor: #fff,\n    btnHoverFocusShadow: rgba(0, 0, 0, 0.3),\n    btnBorderColor: #41403e,\n  ),\n  dark: (\n    bodyBackgroundColor: #222736,\n    headerFooterBackground: #36394c,\n    textColor: #eff2f7,\n    toggleBackground: #606071,\n    navTextColor: #f0f8ff,\n    activeNavTextColor: #f0f8ff,\n    titleTextColor: #f0f8ff,\n    descriptionTxtColor: #f0f8ff,\n    socialIcon: #f0f8ff,\n    btnShadow: rgba(0, 0, 0, 0.2),\n    btnColor: #41403e,\n    btnBackgroundColor: #f6d7d7,\n    btnHoverFocusShadow: rgba(0, 0, 0, 0.3),\n    btnBorderColor: #ffffff,\n  ),\n);\n\n@mixin themify($themes) {\n  @each $theme, $map in $themes {\n    .theme-#{$theme} & {\n      $theme-map: () !global;\n      @each $key, $submap in $map {\n        $value: map-get(map-get($themes, $theme), '#{$key}');\n        $theme-map: map-merge(\n          $theme-map,\n          (\n            $key: $value,\n          )\n        ) !global;\n      }\n      @content;\n      $theme-map: null !global;\n    }\n  }\n}\n\n@function themed($key) {\n  @return map-get($theme-map, $key);\n}\n"],"names":[],"sourceRoot":""}